-- 사용자 초기 데이터
INSERT INTO users (user_id, created_at, updated_at) VALUES
(1, NOW(), NOW()),
(2, NOW(), NOW());

-- 콘서트 초기 데이터
INSERT INTO concert (title, artist, venue, concert_date, start_time, end_time, base_price, created_at, updated_at) VALUES
('아이유 2024 콘서트', '아이유', '올림픽공원', '2024-12-15', '19:00:00', '21:00:00', 120000.00, NOW(), NOW()),
('BTS 월드투어', 'BTS', '잠실종합운동장', '2024-12-22', '20:00:00', '22:30:00', 150000.00, NOW(), NOW()),
('검정치마 겨울 콘서트', '검정치마', '홍대 V홀', '2024-12-28', '19:30:00', '21:30:00', 80000.00, NOW(), NOW());

-- 좌석 초기 데이터 (각 콘서트마다 1~50번 좌석)
-- 아이유 콘서트 좌석 (concert_id = 1)
INSERT INTO seat (concert_id, seat_number, price, status, created_at, updated_at)
SELECT 1, seat_num, 
       120000.00 as price,  -- 모든 좌석 동일 가격
       'AVAILABLE' as status,
       NOW() as created_at,
       NOW() as updated_at
FROM (
    SELECT ROW_NUMBER() OVER () as seat_num
    FROM (
        SELECT 1 as n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
        SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL
        SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15 UNION ALL
        SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
        SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL
        SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30 UNION ALL
        SELECT 31 UNION ALL SELECT 32 UNION ALL SELECT 33 UNION ALL SELECT 34 UNION ALL SELECT 35 UNION ALL
        SELECT 36 UNION ALL SELECT 37 UNION ALL SELECT 38 UNION ALL SELECT 39 UNION ALL SELECT 40 UNION ALL
        SELECT 41 UNION ALL SELECT 42 UNION ALL SELECT 43 UNION ALL SELECT 44 UNION ALL SELECT 45 UNION ALL
        SELECT 46 UNION ALL SELECT 47 UNION ALL SELECT 48 UNION ALL SELECT 49 UNION ALL SELECT 50
    ) numbers
) seat_numbers
WHERE seat_num <= 50;

-- BTS 콘서트 좌석 (concert_id = 2)
INSERT INTO seat (concert_id, seat_number, price, status, created_at, updated_at)
SELECT 2, seat_num, 
       150000.00 as price,  -- 모든 좌석 동일 가격
       'AVAILABLE' as status,
       NOW() as created_at,
       NOW() as updated_at
FROM (
    SELECT ROW_NUMBER() OVER () as seat_num
    FROM (
        SELECT 1 as n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
        SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL
        SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15 UNION ALL
        SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
        SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL
        SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30 UNION ALL
        SELECT 31 UNION ALL SELECT 32 UNION ALL SELECT 33 UNION ALL SELECT 34 UNION ALL SELECT 35 UNION ALL
        SELECT 36 UNION ALL SELECT 37 UNION ALL SELECT 38 UNION ALL SELECT 39 UNION ALL SELECT 40 UNION ALL
        SELECT 41 UNION ALL SELECT 42 UNION ALL SELECT 43 UNION ALL SELECT 44 UNION ALL SELECT 45 UNION ALL
        SELECT 46 UNION ALL SELECT 47 UNION ALL SELECT 48 UNION ALL SELECT 49 UNION ALL SELECT 50
    ) numbers
) seat_numbers
WHERE seat_num <= 50;

-- 검정치마 콘서트 좌석 (concert_id = 3)
INSERT INTO seat (concert_id, seat_number, price, status, created_at, updated_at)
SELECT 3, seat_num, 
       80000.00 as price,   -- 모든 좌석 동일 가격
       'AVAILABLE' as status,
       NOW() as created_at,
       NOW() as updated_at
FROM (
    SELECT ROW_NUMBER() OVER () as seat_num
    FROM (
        SELECT 1 as n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
        SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL
        SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15 UNION ALL
        SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
        SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL
        SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30 UNION ALL
        SELECT 31 UNION ALL SELECT 32 UNION ALL SELECT 33 UNION ALL SELECT 34 UNION ALL SELECT 35 UNION ALL
        SELECT 36 UNION ALL SELECT 37 UNION ALL SELECT 38 UNION ALL SELECT 39 UNION ALL SELECT 40 UNION ALL
        SELECT 41 UNION ALL SELECT 42 UNION ALL SELECT 43 UNION ALL SELECT 44 UNION ALL SELECT 45 UNION ALL
        SELECT 46 UNION ALL SELECT 47 UNION ALL SELECT 48 UNION ALL SELECT 49 UNION ALL SELECT 50
    ) numbers
) seat_numbers
WHERE seat_num <= 50;

-- 일부 좌석을 예약됨 상태로 변경 (테스트용)
UPDATE seat SET status = 'RESERVED' WHERE concert_id = 1 AND seat_number IN (1, 2, 15, 16);
UPDATE seat SET status = 'CONFIRMED' WHERE concert_id = 2 AND seat_number IN (3, 4, 5);
UPDATE seat SET status = 'RESERVED' WHERE concert_id = 3 AND seat_number IN (10, 25);
